
syntax = "proto3";
package cosmos.counter.v1;

import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/counter/types";

// Msg defines the counter Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // IncreaseCount increments the counter by the specified amount.
  rpc IncreaseCount(MsgIncreaseCounter) returns (MsgIncreaseCountResponse);

  // Echo is used for stateless execution.
  rpc Echo(MsgEcho) returns (MsgEchoResponse);
}

// MsgIncreaseCounter defines a count Msg service counter.
message MsgIncreaseCounter {
  option (amino.name)           = "cosmos-sdk/increase_counter"; // TODO: remove amino
  option (cosmos.msg.v1.signer) = "signer";

  // signer is the address that controls the module (defaults to x/gov unless overwritten).
  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // count is the number of times to increment the counter.
  int64 count = 2;
}

// MsgIncreaseCountResponse is the Msg/Counter response type.
message MsgIncreaseCountResponse {
  // new_count is the number of times the counter was incremented.
  int64 new_count = 1;
}

// MsgEcho is the message used for echos.
message MsgEcho {
  string echo = 1;
}

// MsgEchoResponse is the response type when sending a MsgEcho.
message MsgEchoResponse {
  string echo = 1;
}